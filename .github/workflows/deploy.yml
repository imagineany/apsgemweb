name: Deploy to GitHub Pages

on:
  push:
    branches: [main]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v3
        with:
          version: 8
          run_install: false

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: "22"
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install

      - name: Install Qwik Static Adapter
        run: pnpm qwik add static --no-install

      - name: Configure Static Adapter
        run: |
          # Set default values
          USE_CUSTOM_DOMAIN="false"
          TRAILING_SLASH="true"
          
          # Extract repository name from github.repository
          REPO_NAME=$(echo ${{ github.repository }} | cut -d'/' -f2)
          
          # Check if .domain.config file exists and read from it
          if [ -f ".domain.config" ]; then
            echo "Reading configuration from .domain.config file"
            
            # Read domain settings
            CONFIG=$(cat .domain.config)
            DOMAIN=$(echo $CONFIG | jq -r '.domain // empty')
            USE_CUSTOM_DOMAIN=$(echo $CONFIG | jq -r '.useCustomDomain // false')
            TRAILING_SLASH=$(echo $CONFIG | jq -r '.trailingSlash // true')
            
            echo "Domain settings: DOMAIN=$DOMAIN, USE_CUSTOM_DOMAIN=$USE_CUSTOM_DOMAIN, TRAILING_SLASH=$TRAILING_SLASH"
          else
            echo "No .domain.config file found, using default settings"
          fi
          
          # Set the origin based on configuration
          if [ "$USE_CUSTOM_DOMAIN" = "true" ] && [ ! -z "$DOMAIN" ]; then
            ORIGIN="https://$DOMAIN"
            echo "Using custom domain: $DOMAIN"
          else
            ORIGIN="https://${{ github.repository_owner }}.github.io/$REPO_NAME"
            echo "Using GitHub Pages domain"
          fi
          
          # Update the origin URL in the static adapter config
          sed -i 's|origin: "https://yoursite.qwik.dev"|origin: "'$ORIGIN'"|' adapters/static/vite.config.ts
          
          # Fix the base path duplication by setting the main vite.config.ts base to '/'
          # when the static adapter is being used
          sed -i 's|base: process.env.GITHUB_REPOSITORY|base: process.env.STATIC_ADAPTER ? "/" : process.env.GITHUB_REPOSITORY|' vite.config.ts
          
          # Add base path configuration to the static adapter to ensure correct asset paths
          if ! grep -q "base:" adapters/static/vite.config.ts; then
            if [ "$USE_CUSTOM_DOMAIN" = "true" ] && [ ! -z "$DOMAIN" ]; then
              sed -i '/staticAdapter({/a\        base: "/",\n        trailingSlash: '$TRAILING_SLASH',' adapters/static/vite.config.ts
            else
              sed -i '/staticAdapter({/a\        base: "/'$REPO_NAME'/",\n        trailingSlash: '$TRAILING_SLASH',' adapters/static/vite.config.ts
            fi
          fi
          
          # Create CNAME file if using custom domain
          if [ "$USE_CUSTOM_DOMAIN" = "true" ] && [ ! -z "$DOMAIN" ]; then
            echo "$DOMAIN" > public/CNAME
            echo "Created CNAME file for $DOMAIN"
          fi

      - name: Build
        run: pnpm build
        env:
          # This ensures the base path is set correctly for GitHub Pages
          GITHUB_REPOSITORY: ${{ github.repository }}
          STATIC_ADAPTER: true

      - name: Setup Pages
        uses: actions/configure-pages@v4

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: './dist'

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
